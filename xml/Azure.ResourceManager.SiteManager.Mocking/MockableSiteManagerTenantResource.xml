<Type Name="MockableSiteManagerTenantResource" FullName="Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource">
  <TypeSignature Language="C#" Value="public class MockableSiteManagerTenantResource : Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockableSiteManagerTenantResource extends Azure.ResourceManager.ArmResource" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource" />
  <TypeSignature Language="VB.NET" Value="Public Class MockableSiteManagerTenantResource&#xA;Inherits ArmResource" />
  <TypeSignature Language="F#" Value="type MockableSiteManagerTenantResource = class&#xA;    inherit ArmResource" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.SiteManager</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Azure.ResourceManager.ArmResource</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to TenantResource. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockableSiteManagerTenantResource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SiteManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary> Initializes a new instance of the <see cref="T:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource" /> class for mocking. </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSitesByServiceGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt; CreateOrUpdateSitesByServiceGroup (Azure.WaitUntil waitUntil, string servicegroupName, string siteName, Azure.ResourceManager.SiteManager.EdgeSiteData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.SiteManager.EdgeSiteResource&gt; CreateOrUpdateSitesByServiceGroup(valuetype Azure.WaitUntil waitUntil, string servicegroupName, string siteName, class Azure.ResourceManager.SiteManager.EdgeSiteData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource.CreateOrUpdateSitesByServiceGroup(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.SiteManager.EdgeSiteData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSitesByServiceGroup (waitUntil As WaitUntil, servicegroupName As String, siteName As String, data As EdgeSiteData, Optional cancellationToken As CancellationToken = Nothing) As ArmOperation(Of EdgeSiteResource)" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSitesByServiceGroup : Azure.WaitUntil * string * string * Azure.ResourceManager.SiteManager.EdgeSiteData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&#xA;override this.CreateOrUpdateSitesByServiceGroup : Azure.WaitUntil * string * string * Azure.ResourceManager.SiteManager.EdgeSiteData * System.Threading.CancellationToken -&gt; Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;" Usage="mockableSiteManagerTenantResource.CreateOrUpdateSitesByServiceGroup (waitUntil, servicegroupName, siteName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SiteManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="servicegroupName" Type="System.String" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.SiteManager.EdgeSiteData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="servicegroupName"> The name of the service group. </param>
        <param name="siteName"> The name of the site. </param>
        <param name="data"> The properties of the site. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            create or update Site at SG scope
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/serviceGroups/{servicegroupName}/providers/Microsoft.Edge/sites/{siteName}</description></item><item><term>Operation Id</term><description>SitesByServiceGroup_CreateOrUpdate</description></item><item><term>Default Api Version</term><description>2025-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="servicegroupName" /> or <paramref name="siteName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="servicegroupName" />, <paramref name="siteName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateOrUpdateSitesByServiceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt; CreateOrUpdateSitesByServiceGroupAsync (Azure.WaitUntil waitUntil, string servicegroupName, string siteName, Azure.ResourceManager.SiteManager.EdgeSiteData data, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.ResourceManager.ArmOperation`1&lt;class Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt; CreateOrUpdateSitesByServiceGroupAsync(valuetype Azure.WaitUntil waitUntil, string servicegroupName, string siteName, class Azure.ResourceManager.SiteManager.EdgeSiteData data, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource.CreateOrUpdateSitesByServiceGroupAsync(Azure.WaitUntil,System.String,System.String,Azure.ResourceManager.SiteManager.EdgeSiteData,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateOrUpdateSitesByServiceGroupAsync (waitUntil As WaitUntil, servicegroupName As String, siteName As String, data As EdgeSiteData, Optional cancellationToken As CancellationToken = Nothing) As Task(Of ArmOperation(Of EdgeSiteResource))" />
      <MemberSignature Language="F#" Value="abstract member CreateOrUpdateSitesByServiceGroupAsync : Azure.WaitUntil * string * string * Azure.ResourceManager.SiteManager.EdgeSiteData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt;&#xA;override this.CreateOrUpdateSitesByServiceGroupAsync : Azure.WaitUntil * string * string * Azure.ResourceManager.SiteManager.EdgeSiteData * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt;" Usage="mockableSiteManagerTenantResource.CreateOrUpdateSitesByServiceGroupAsync (waitUntil, servicegroupName, siteName, data, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SiteManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.ResourceManager.ArmOperation&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waitUntil" Type="Azure.WaitUntil" />
        <Parameter Name="servicegroupName" Type="System.String" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="data" Type="Azure.ResourceManager.SiteManager.EdgeSiteData" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="waitUntil">
          <see cref="F:Azure.WaitUntil.Completed" /> if the method should wait to return until the long-running operation has completed on the service; <see cref="F:Azure.WaitUntil.Started" /> if it should return after starting the operation. For more information on long-running operations, please see <see href="https://github.com/Azure/azure-sdk-for-net/blob/main/sdk/core/Azure.Core/samples/LongRunningOperations.md"> Azure.Core Long-Running Operation samples</see>. </param>
        <param name="servicegroupName"> The name of the service group. </param>
        <param name="siteName"> The name of the site. </param>
        <param name="data"> The properties of the site. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            create or update Site at SG scope
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/serviceGroups/{servicegroupName}/providers/Microsoft.Edge/sites/{siteName}</description></item><item><term>Operation Id</term><description>SitesByServiceGroup_CreateOrUpdate</description></item><item><term>Default Api Version</term><description>2025-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="servicegroupName" /> or <paramref name="siteName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="servicegroupName" />, <paramref name="siteName" /> or <paramref name="data" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSitesByServiceGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteSitesByServiceGroup (string servicegroupName, string siteName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteSitesByServiceGroup(string servicegroupName, string siteName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource.DeleteSitesByServiceGroup(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSitesByServiceGroup (servicegroupName As String, siteName As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteSitesByServiceGroup : string * string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteSitesByServiceGroup : string * string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="mockableSiteManagerTenantResource.DeleteSitesByServiceGroup (servicegroupName, siteName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SiteManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="servicegroupName" Type="System.String" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="servicegroupName"> The name of the service group. </param>
        <param name="siteName"> The name of the site. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            delete Site at SG scope
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/serviceGroups/{servicegroupName}/providers/Microsoft.Edge/sites/{siteName}</description></item><item><term>Operation Id</term><description>SitesByServiceGroup_Delete</description></item><item><term>Default Api Version</term><description>2025-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="servicegroupName" /> or <paramref name="siteName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="servicegroupName" /> or <paramref name="siteName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteSitesByServiceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteSitesByServiceGroupAsync (string servicegroupName, string siteName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteSitesByServiceGroupAsync(string servicegroupName, string siteName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource.DeleteSitesByServiceGroupAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteSitesByServiceGroupAsync (servicegroupName As String, siteName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteSitesByServiceGroupAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteSitesByServiceGroupAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="mockableSiteManagerTenantResource.DeleteSitesByServiceGroupAsync (servicegroupName, siteName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SiteManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="servicegroupName" Type="System.String" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="servicegroupName"> The name of the service group. </param>
        <param name="siteName"> The name of the site. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            delete Site at SG scope
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/serviceGroups/{servicegroupName}/providers/Microsoft.Edge/sites/{siteName}</description></item><item><term>Operation Id</term><description>SitesByServiceGroup_Delete</description></item><item><term>Default Api Version</term><description>2025-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="servicegroupName" /> or <paramref name="siteName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="servicegroupName" /> or <paramref name="siteName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEdgeSites">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt; GetEdgeSites (string servicegroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.ResourceManager.SiteManager.EdgeSiteResource&gt; GetEdgeSites(string servicegroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource.GetEdgeSites(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEdgeSites (servicegroupName As String, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of EdgeSiteResource)" />
      <MemberSignature Language="F#" Value="abstract member GetEdgeSites : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&#xA;override this.GetEdgeSites : string * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;" Usage="mockableSiteManagerTenantResource.GetEdgeSites (servicegroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SiteManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="servicegroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="servicegroupName"> The name of the service group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            list Site at SG scope
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/serviceGroups/{servicegroupName}/providers/Microsoft.Edge/sites</description></item><item><term>Operation Id</term><description>SitesByServiceGroup_ListByServiceGroup</description></item><item><term>Default Api Version</term><description>2025-03-01-preview</description></item></list></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.SiteManager.EdgeSiteResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="servicegroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="servicegroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEdgeSitesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt; GetEdgeSitesAsync (string servicegroupName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.SiteManager.EdgeSiteResource&gt; GetEdgeSitesAsync(string servicegroupName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource.GetEdgeSitesAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEdgeSitesAsync (servicegroupName As String, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of EdgeSiteResource)" />
      <MemberSignature Language="F#" Value="abstract member GetEdgeSitesAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&#xA;override this.GetEdgeSitesAsync : string * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;" Usage="mockableSiteManagerTenantResource.GetEdgeSitesAsync (servicegroupName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SiteManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="servicegroupName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="servicegroupName"> The name of the service group. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            list Site at SG scope
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/serviceGroups/{servicegroupName}/providers/Microsoft.Edge/sites</description></item><item><term>Operation Id</term><description>SitesByServiceGroup_ListByServiceGroup</description></item><item><term>Default Api Version</term><description>2025-03-01-preview</description></item></list></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.SiteManager.EdgeSiteResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="servicegroupName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="servicegroupName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSitesByServiceGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt; GetSitesByServiceGroup (string servicegroupName, string siteName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SiteManager.EdgeSiteResource&gt; GetSitesByServiceGroup(string servicegroupName, string siteName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource.GetSitesByServiceGroup(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSitesByServiceGroup (servicegroupName As String, siteName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EdgeSiteResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSitesByServiceGroup : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&#xA;override this.GetSitesByServiceGroup : string * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;" Usage="mockableSiteManagerTenantResource.GetSitesByServiceGroup (servicegroupName, siteName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SiteManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="servicegroupName" Type="System.String" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="servicegroupName"> The name of the service group. </param>
        <param name="siteName"> The name of the site. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Site at SG scope
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/serviceGroups/{servicegroupName}/providers/Microsoft.Edge/sites/{siteName}</description></item><item><term>Operation Id</term><description>SitesByServiceGroup_Get</description></item><item><term>Default Api Version</term><description>2025-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="servicegroupName" /> or <paramref name="siteName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="servicegroupName" /> or <paramref name="siteName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSitesByServiceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt; GetSitesByServiceGroupAsync (string servicegroupName, string siteName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt; GetSitesByServiceGroupAsync(string servicegroupName, string siteName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource.GetSitesByServiceGroupAsync(System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSitesByServiceGroupAsync (servicegroupName As String, siteName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EdgeSiteResource))" />
      <MemberSignature Language="F#" Value="abstract member GetSitesByServiceGroupAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt;&#xA;override this.GetSitesByServiceGroupAsync : string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt;" Usage="mockableSiteManagerTenantResource.GetSitesByServiceGroupAsync (servicegroupName, siteName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SiteManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="servicegroupName" Type="System.String" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="servicegroupName"> The name of the service group. </param>
        <param name="siteName"> The name of the site. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Get Site at SG scope
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/serviceGroups/{servicegroupName}/providers/Microsoft.Edge/sites/{siteName}</description></item><item><term>Operation Id</term><description>SitesByServiceGroup_Get</description></item><item><term>Default Api Version</term><description>2025-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="servicegroupName" /> or <paramref name="siteName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="servicegroupName" /> or <paramref name="siteName" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateSitesByServiceGroup">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt; UpdateSitesByServiceGroup (string servicegroupName, string siteName, Azure.ResourceManager.SiteManager.Models.EdgeSitePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.ResourceManager.SiteManager.EdgeSiteResource&gt; UpdateSitesByServiceGroup(string servicegroupName, string siteName, class Azure.ResourceManager.SiteManager.Models.EdgeSitePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource.UpdateSitesByServiceGroup(System.String,System.String,Azure.ResourceManager.SiteManager.Models.EdgeSitePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateSitesByServiceGroup (servicegroupName As String, siteName As String, patch As EdgeSitePatch, Optional cancellationToken As CancellationToken = Nothing) As Response(Of EdgeSiteResource)" />
      <MemberSignature Language="F#" Value="abstract member UpdateSitesByServiceGroup : string * string * Azure.ResourceManager.SiteManager.Models.EdgeSitePatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&#xA;override this.UpdateSitesByServiceGroup : string * string * Azure.ResourceManager.SiteManager.Models.EdgeSitePatch * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;" Usage="mockableSiteManagerTenantResource.UpdateSitesByServiceGroup (servicegroupName, siteName, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SiteManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="servicegroupName" Type="System.String" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="patch" Type="Azure.ResourceManager.SiteManager.Models.EdgeSitePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="servicegroupName"> The name of the service group. </param>
        <param name="siteName"> The name of the site. </param>
        <param name="patch"> The properties of the site. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            update Site at SG scope
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/serviceGroups/{servicegroupName}/providers/Microsoft.Edge/sites/{siteName}</description></item><item><term>Operation Id</term><description>SitesByServiceGroup_Update</description></item><item><term>Default Api Version</term><description>2025-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="servicegroupName" /> or <paramref name="siteName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="servicegroupName" />, <paramref name="siteName" /> or <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateSitesByServiceGroupAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt; UpdateSitesByServiceGroupAsync (string servicegroupName, string siteName, Azure.ResourceManager.SiteManager.Models.EdgeSitePatch patch, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt; UpdateSitesByServiceGroupAsync(string servicegroupName, string siteName, class Azure.ResourceManager.SiteManager.Models.EdgeSitePatch patch, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.SiteManager.Mocking.MockableSiteManagerTenantResource.UpdateSitesByServiceGroupAsync(System.String,System.String,Azure.ResourceManager.SiteManager.Models.EdgeSitePatch,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateSitesByServiceGroupAsync (servicegroupName As String, siteName As String, patch As EdgeSitePatch, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of EdgeSiteResource))" />
      <MemberSignature Language="F#" Value="abstract member UpdateSitesByServiceGroupAsync : string * string * Azure.ResourceManager.SiteManager.Models.EdgeSitePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt;&#xA;override this.UpdateSitesByServiceGroupAsync : string * string * Azure.ResourceManager.SiteManager.Models.EdgeSitePatch * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt;" Usage="mockableSiteManagerTenantResource.UpdateSitesByServiceGroupAsync (servicegroupName, siteName, patch, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.SiteManager</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.SiteManager.EdgeSiteResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="servicegroupName" Type="System.String" />
        <Parameter Name="siteName" Type="System.String" />
        <Parameter Name="patch" Type="Azure.ResourceManager.SiteManager.Models.EdgeSitePatch" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="servicegroupName"> The name of the service group. </param>
        <param name="siteName"> The name of the site. </param>
        <param name="patch"> The properties of the site. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            update Site at SG scope
            <list type="bullet"><item><term>Request Path</term><description>/providers/Microsoft.Management/serviceGroups/{servicegroupName}/providers/Microsoft.Edge/sites/{siteName}</description></item><item><term>Operation Id</term><description>SitesByServiceGroup_Update</description></item><item><term>Default Api Version</term><description>2025-03-01-preview</description></item></list></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="servicegroupName" /> or <paramref name="siteName" /> is an empty string, and was expected to be non-empty. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="servicegroupName" />, <paramref name="siteName" /> or <paramref name="patch" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
