<Type Name="ApiCenterExtensions" FullName="Azure.ResourceManager.ApiCenter.ApiCenterExtensions">
  <TypeSignature Language="C#" Value="public static class ApiCenterExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ApiCenterExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.ResourceManager.ApiCenter.ApiCenterExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ApiCenterExtensions" />
  <TypeSignature Language="F#" Value="type ApiCenterExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>1.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary> A class to add extension methods to Azure.ResourceManager.ApiCenter. </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetApiCenterApiDefinitionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ApiCenter.ApiCenterApiDefinitionResource GetApiCenterApiDefinitionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ApiCenter.ApiCenterApiDefinitionResource GetApiCenterApiDefinitionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterApiDefinitionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterApiDefinitionResource (client As ArmClient, id As ResourceIdentifier) As ApiCenterApiDefinitionResource" />
      <MemberSignature Language="F#" Value="static member GetApiCenterApiDefinitionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiCenter.ApiCenterApiDefinitionResource" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterApiDefinitionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiCenter.ApiCenterApiDefinitionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterApiDefinitionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiCenter.ApiCenterApiDefinitionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterApiDefinitionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterArmClient.GetApiCenterApiDefinitionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterApiDefinitionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiCenterApiResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ApiCenter.ApiCenterApiResource GetApiCenterApiResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ApiCenter.ApiCenterApiResource GetApiCenterApiResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterApiResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterApiResource (client As ArmClient, id As ResourceIdentifier) As ApiCenterApiResource" />
      <MemberSignature Language="F#" Value="static member GetApiCenterApiResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiCenter.ApiCenterApiResource" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterApiResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiCenter.ApiCenterApiResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterApiResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiCenter.ApiCenterApiResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterApiResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterArmClient.GetApiCenterApiResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterApiResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiCenterApiVersionResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ApiCenter.ApiCenterApiVersionResource GetApiCenterApiVersionResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ApiCenter.ApiCenterApiVersionResource GetApiCenterApiVersionResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterApiVersionResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterApiVersionResource (client As ArmClient, id As ResourceIdentifier) As ApiCenterApiVersionResource" />
      <MemberSignature Language="F#" Value="static member GetApiCenterApiVersionResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiCenter.ApiCenterApiVersionResource" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterApiVersionResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiCenter.ApiCenterApiVersionResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterApiVersionResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiCenter.ApiCenterApiVersionResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterApiVersionResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterArmClient.GetApiCenterApiVersionResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterApiVersionResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiCenterDeploymentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ApiCenter.ApiCenterDeploymentResource GetApiCenterDeploymentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ApiCenter.ApiCenterDeploymentResource GetApiCenterDeploymentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterDeploymentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterDeploymentResource (client As ArmClient, id As ResourceIdentifier) As ApiCenterDeploymentResource" />
      <MemberSignature Language="F#" Value="static member GetApiCenterDeploymentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiCenter.ApiCenterDeploymentResource" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterDeploymentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiCenter.ApiCenterDeploymentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterDeploymentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiCenter.ApiCenterDeploymentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterDeploymentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterArmClient.GetApiCenterDeploymentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterDeploymentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiCenterEnvironmentResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ApiCenter.ApiCenterEnvironmentResource GetApiCenterEnvironmentResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ApiCenter.ApiCenterEnvironmentResource GetApiCenterEnvironmentResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterEnvironmentResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterEnvironmentResource (client As ArmClient, id As ResourceIdentifier) As ApiCenterEnvironmentResource" />
      <MemberSignature Language="F#" Value="static member GetApiCenterEnvironmentResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiCenter.ApiCenterEnvironmentResource" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterEnvironmentResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiCenter.ApiCenterEnvironmentResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterEnvironmentResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiCenter.ApiCenterEnvironmentResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterEnvironmentResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterArmClient.GetApiCenterEnvironmentResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterEnvironmentResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiCenterMetadataSchemaResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ApiCenter.ApiCenterMetadataSchemaResource GetApiCenterMetadataSchemaResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ApiCenter.ApiCenterMetadataSchemaResource GetApiCenterMetadataSchemaResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterMetadataSchemaResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterMetadataSchemaResource (client As ArmClient, id As ResourceIdentifier) As ApiCenterMetadataSchemaResource" />
      <MemberSignature Language="F#" Value="static member GetApiCenterMetadataSchemaResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiCenter.ApiCenterMetadataSchemaResource" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterMetadataSchemaResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiCenter.ApiCenterMetadataSchemaResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterMetadataSchemaResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiCenter.ApiCenterMetadataSchemaResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterMetadataSchemaResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterArmClient.GetApiCenterMetadataSchemaResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterMetadataSchemaResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiCenterService">
      <MemberSignature Language="C#" Value="public static Azure.Response&lt;Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt; GetApiCenterService (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string serviceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Response`1&lt;class Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt; GetApiCenterService(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string serviceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterService(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterService (resourceGroupResource As ResourceGroupResource, serviceName As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ApiCenterServiceResource)" />
      <MemberSignature Language="F#" Value="static member GetApiCenterService : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt;" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterService (resourceGroupResource, serviceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="serviceName"> The name of Azure API Center service. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns details of the service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}</description></item><item><term>Operation Id</term><description>Services_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterServiceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterResourceGroupResource.GetApiCenterService(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="serviceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="serviceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiCenterServiceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt;&gt; GetApiCenterServiceAsync (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string serviceName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt;&gt; GetApiCenterServiceAsync(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource, string serviceName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterServiceAsync(Azure.ResourceManager.Resources.ResourceGroupResource,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterServiceAsync (resourceGroupResource As ResourceGroupResource, serviceName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ApiCenterServiceResource))" />
      <MemberSignature Language="F#" Value="static member GetApiCenterServiceAsync : Azure.ResourceManager.Resources.ResourceGroupResource * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt;&gt;" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterServiceAsync (resourceGroupResource, serviceName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
        <Parameter Name="serviceName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <param name="serviceName"> The name of Azure API Center service. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Returns details of the service.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiCenter/services/{serviceName}</description></item><item><term>Operation Id</term><description>Services_Get</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterServiceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterResourceGroupResource.GetApiCenterServiceAsync(System.String,System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> or <paramref name="serviceName" /> is null. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="serviceName" /> is an empty string, and was expected to be non-empty. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiCenterServiceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ApiCenter.ApiCenterServiceResource GetApiCenterServiceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ApiCenter.ApiCenterServiceResource GetApiCenterServiceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterServiceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterServiceResource (client As ArmClient, id As ResourceIdentifier) As ApiCenterServiceResource" />
      <MemberSignature Language="F#" Value="static member GetApiCenterServiceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiCenter.ApiCenterServiceResource" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterServiceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiCenter.ApiCenterServiceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterServiceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiCenter.ApiCenterServiceResource.CreateResourceIdentifier(System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterServiceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterArmClient.GetApiCenterServiceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterServiceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiCenterServices">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ApiCenter.ApiCenterServiceCollection GetApiCenterServices (this Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ApiCenter.ApiCenterServiceCollection GetApiCenterServices(class Azure.ResourceManager.Resources.ResourceGroupResource resourceGroupResource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterServices(Azure.ResourceManager.Resources.ResourceGroupResource)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterServices (resourceGroupResource As ResourceGroupResource) As ApiCenterServiceCollection" />
      <MemberSignature Language="F#" Value="static member GetApiCenterServices : Azure.ResourceManager.Resources.ResourceGroupResource -&gt; Azure.ResourceManager.ApiCenter.ApiCenterServiceCollection" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterServices resourceGroupResource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiCenter.ApiCenterServiceCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceGroupResource" Type="Azure.ResourceManager.Resources.ResourceGroupResource" RefType="this" />
      </Parameters>
      <Docs>
        <param name="resourceGroupResource"> The <see cref="T:Azure.ResourceManager.Resources.ResourceGroupResource" /> instance the method will execute against. </param>
        <summary>
            Gets a collection of ApiCenterServiceResources in the ResourceGroupResource.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterResourceGroupResource.GetApiCenterServices" /> instead.</description></item></summary>
        <returns> An object representing collection of ApiCenterServiceResources and their operations over a ApiCenterServiceResource. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="resourceGroupResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiCenterServices">
      <MemberSignature Language="C#" Value="public static Azure.Pageable&lt;Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt; GetApiCenterServices (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.Pageable`1&lt;class Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt; GetApiCenterServices(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterServices(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterServices (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ApiCenterServiceResource)" />
      <MemberSignature Language="F#" Value="static member GetApiCenterServices : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt;" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterServices (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists services within an Azure subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ApiCenter/services</description></item><item><term>Operation Id</term><description>Services_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterServiceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterSubscriptionResource.GetApiCenterServices(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> A collection of <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiCenterServicesAsync">
      <MemberSignature Language="C#" Value="public static Azure.AsyncPageable&lt;Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt; GetApiCenterServicesAsync (this Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.AsyncPageable`1&lt;class Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt; GetApiCenterServicesAsync(class Azure.ResourceManager.Resources.SubscriptionResource subscriptionResource, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterServicesAsync(Azure.ResourceManager.Resources.SubscriptionResource,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterServicesAsync (subscriptionResource As SubscriptionResource, Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ApiCenterServiceResource)" />
      <MemberSignature Language="F#" Value="static member GetApiCenterServicesAsync : Azure.ResourceManager.Resources.SubscriptionResource * System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt;" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterServicesAsync (subscriptionResource, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.ResourceManager.ApiCenter.ApiCenterServiceResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subscriptionResource" Type="Azure.ResourceManager.Resources.SubscriptionResource" RefType="this" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="subscriptionResource"> The <see cref="T:Azure.ResourceManager.Resources.SubscriptionResource" /> instance the method will execute against. </param>
        <param name="cancellationToken"> The cancellation token to use. </param>
        <summary>
            Lists services within an Azure subscription.
            <list type="bullet"><item><term>Request Path</term><description>/subscriptions/{subscriptionId}/providers/Microsoft.ApiCenter/services</description></item><item><term>Operation Id</term><description>Services_ListBySubscription</description></item><item><term>Default Api Version</term><description>2024-03-01</description></item><item><term>Resource</term><description><see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterServiceResource" /></description></item></list><item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterSubscriptionResource.GetApiCenterServices(System.Threading.CancellationToken)" /> instead.</description></item></summary>
        <returns> An async collection of <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterServiceResource" /> that may take multiple service requests to iterate over. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="subscriptionResource" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetApiCenterWorkspaceResource">
      <MemberSignature Language="C#" Value="public static Azure.ResourceManager.ApiCenter.ApiCenterWorkspaceResource GetApiCenterWorkspaceResource (this Azure.ResourceManager.ArmClient client, Azure.Core.ResourceIdentifier id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Azure.ResourceManager.ApiCenter.ApiCenterWorkspaceResource GetApiCenterWorkspaceResource(class Azure.ResourceManager.ArmClient client, class Azure.Core.ResourceIdentifier id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterWorkspaceResource(Azure.ResourceManager.ArmClient,Azure.Core.ResourceIdentifier)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetApiCenterWorkspaceResource (client As ArmClient, id As ResourceIdentifier) As ApiCenterWorkspaceResource" />
      <MemberSignature Language="F#" Value="static member GetApiCenterWorkspaceResource : Azure.ResourceManager.ArmClient * Azure.Core.ResourceIdentifier -&gt; Azure.ResourceManager.ApiCenter.ApiCenterWorkspaceResource" Usage="Azure.ResourceManager.ApiCenter.ApiCenterExtensions.GetApiCenterWorkspaceResource (client, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.ResourceManager.ApiCenter</AssemblyName>
        <AssemblyVersion>1.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.ResourceManager.ApiCenter.ApiCenterWorkspaceResource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="client" Type="Azure.ResourceManager.ArmClient" RefType="this" />
        <Parameter Name="id" Type="Azure.Core.ResourceIdentifier" />
      </Parameters>
      <Docs>
        <param name="client"> The <see cref="T:Azure.ResourceManager.ArmClient" /> instance the method will execute against. </param>
        <param name="id"> The resource ID of the resource to get. </param>
        <summary>
            Gets an object representing an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterWorkspaceResource" /> along with the instance operations that can be performed on it but with no data.
            You can use <see cref="M:Azure.ResourceManager.ApiCenter.ApiCenterWorkspaceResource.CreateResourceIdentifier(System.String,System.String,System.String,System.String)" /> to create an <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterWorkspaceResource" /><see cref="T:Azure.Core.ResourceIdentifier" /> from its components.
            <item><term>Mocking</term><description>To mock this method, please mock <see cref="M:Azure.ResourceManager.ApiCenter.Mocking.MockableApiCenterArmClient.GetApiCenterWorkspaceResource(Azure.Core.ResourceIdentifier)" /> instead.</description></item></summary>
        <returns> Returns a <see cref="T:Azure.ResourceManager.ApiCenter.ApiCenterWorkspaceResource" /> object. </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="client" /> is null. </exception>
      </Docs>
    </Member>
  </Members>
</Type>
